#!/usr/bin/env ruby

require "optparse"
require "rest-client"
require "json"

EXIT_OK = 0
EXIT_WARNING = 1
EXIT_CRITICAL = 2
EXIT_UNKNOWN = 3

@@options = {}

optparse = OptionParser.new do |opts|
  opts.banner = "Usage: #{File.basename($0)} [options]"

  @@options[:url] = nil
  opts.on("-u", "--url URL", "Target url") do |url|
    @@options[:url] = url
  end
  @@options[:metric] = nil
  opts.on("-m", "--metric NAME", "Metric path string") do |metric|
    @@options[:metric] = metric
  end
  @@options[:duration] = 5
  opts.on("-d", "--duration LENGTH", "Length, in minute of data to parse (default: 5)") do |duration|
    @@options[:duration] = duration
  end
  @@options[:warning] = nil
  opts.on("-w", "--warning VALUE", "Warning threshold") do |warning|
    @@options[:warning] = warning
  end
  @@options[:critical] = nil
  opts.on("-c", "--critical VALUE", "Critical threshold") do |critical|
    @@options[:critical] = critical
  end
  opts.on( "-h", "--help", "Display this screen" ) do
    puts opts
    exit
  end
end

optparse.parse!

if (@@options[:url].nil? || @@options[:metric].nil? || @@options[:warning].nil? || @@options[:critical].nil?)
  puts optparse
  exit 2
end

def url
  base_url = @@options[:url]
  metric = @@options[:metric]
  duration = @@options[:duration].to_s
  base_url + "/render/?target=" + metric + "&format=json&from=-" + duration + "mins"
end

data = {}
data["total"] = 0

JSON.parse(RestClient.get(url)).each do |cache|
  data["#{cache['target']}"] = 0
  count = 0
  cache["datapoints"].each do |point|
    unless (point[0].nil?)
      data["#{cache['target']}"] += point[0]
      count += 1
    end
  end
  data["#{cache['target']}"] /= count
  data["total"] += data["#{cache['target']}"]
end

total = data["total"].to_i

if (@@options[:critical].to_i > @@options[:warning].to_i)
  if (total >= @@options[:critical].to_i)
    puts "CRITICAL metric count: #{total}"
    exit EXIT_CRITICAL
  elsif (total >= @@options[:warning].to_i)
    puts "WARNING metric count: #{total}"
    exit EXIT_WARNING
  else
    puts "OK metric count: #{total}"
    exit EXIT_OK
  end
else
  if (total <= @@options[:critical].to_i)
    puts "CRITICAL metric count: #{total}"
    exit EXIT_CRITICAL
  elsif (total <= @@options[:warning].to_i)
    puts "WARNING metric count: #{total}"
    exit EXIT_WARNING
  else
    puts "OK metric count: #{total}"
    exit EXIT_OK
  end
end

